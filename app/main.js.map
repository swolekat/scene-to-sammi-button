{"version":3,"file":"main.js","mappings":"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","sources":["webpack://scene-to-sammi-button/./src/helpers/window.js","webpack://scene-to-sammi-button/./src/main-window.js","webpack://scene-to-sammi-button/./src/menu/app_menu_template.js","webpack://scene-to-sammi-button/./src/menu/dev_menu_template.js","webpack://scene-to-sammi-button/external commonjs \"electron\"","webpack://scene-to-sammi-button/external commonjs \"fs-jetpack\"","webpack://scene-to-sammi-button/external node-commonjs \"fs\"","webpack://scene-to-sammi-button/external node-commonjs \"path\"","webpack://scene-to-sammi-button/external node-commonjs \"url\"","webpack://scene-to-sammi-button/webpack/bootstrap","webpack://scene-to-sammi-button/webpack/runtime/compat get default export","webpack://scene-to-sammi-button/webpack/runtime/define property getters","webpack://scene-to-sammi-button/webpack/runtime/hasOwnProperty shorthand","webpack://scene-to-sammi-button/webpack/runtime/make namespace object","webpack://scene-to-sammi-button/./src/main.js"],"sourcesContent":["// This helper remembers the size and position of your windows, and restores\r\n// them in that place after app relaunch.\r\n// Can be used for more than one window, just construct many\r\n// instances of it and give each different name.\r\n\r\nimport { app, BrowserWindow, screen } from \"electron\";\r\nimport jetpack from \"fs-jetpack\";\r\n\r\nexport default (name, options) => {\r\n  const userDataDir = jetpack.cwd(app.getPath(\"userData\"));\r\n  const stateStoreFile = `window-state-${name}.json`;\r\n  const defaultSize = {\r\n    width: options.width,\r\n    height: options.height\r\n  };\r\n  let state = {};\r\n  let win;\r\n\r\n  const restore = () => {\r\n    let restoredState = {};\r\n    try {\r\n      restoredState = userDataDir.read(stateStoreFile, \"json\");\r\n    } catch (err) {\r\n      // For some reason json can't be read (might be corrupted).\r\n      // No worries, we have defaults.\r\n    }\r\n    return Object.assign({}, defaultSize, restoredState);\r\n  };\r\n\r\n  const getCurrentPosition = () => {\r\n    const position = win.getPosition();\r\n    const size = win.getSize();\r\n    return {\r\n      x: position[0],\r\n      y: position[1],\r\n      width: size[0],\r\n      height: size[1]\r\n    };\r\n  };\r\n\r\n  const windowWithinBounds = (windowState, bounds) => {\r\n    return (\r\n      windowState.x >= bounds.x &&\r\n      windowState.y >= bounds.y &&\r\n      windowState.x + windowState.width <= bounds.x + bounds.width &&\r\n      windowState.y + windowState.height <= bounds.y + bounds.height\r\n    );\r\n  };\r\n\r\n  const resetToDefaults = () => {\r\n    const bounds = screen.getPrimaryDisplay().bounds;\r\n    return Object.assign({}, defaultSize, {\r\n      x: (bounds.width - defaultSize.width) / 2,\r\n      y: (bounds.height - defaultSize.height) / 2\r\n    });\r\n  };\r\n\r\n  const ensureVisibleOnSomeDisplay = windowState => {\r\n    const visible = screen.getAllDisplays().some(display => {\r\n      return windowWithinBounds(windowState, display.bounds);\r\n    });\r\n    if (!visible) {\r\n      // Window is partially or fully not visible now.\r\n      // Reset it to safe defaults.\r\n      return resetToDefaults();\r\n    }\r\n    return windowState;\r\n  };\r\n\r\n  const saveState = () => {\r\n    if (!win.isMinimized() && !win.isMaximized()) {\r\n      Object.assign(state, getCurrentPosition());\r\n    }\r\n    userDataDir.write(stateStoreFile, state, { atomic: true });\r\n  };\r\n\r\n  state = ensureVisibleOnSomeDisplay(restore());\r\n\r\n  win = new BrowserWindow(Object.assign({}, options, state));\r\n\r\n  win.on(\"close\", saveState);\r\n\r\n  return win;\r\n};\r\n","import createWindow from \"./helpers/window\";\r\nimport url from \"url\";\r\nimport path from \"path\";\r\nimport env from \"env\";\r\n\r\nlet mainWindow;\r\n\r\nexport const init = () => {\r\n    mainWindow = createWindow(\"main\", {\r\n        width: 1000,\r\n        height: 600,\r\n        webPreferences: {\r\n            // Two properties below are here for demo purposes, and are\r\n            // security hazard. Make sure you know what you're doing\r\n            // in your production app.\r\n            nodeIntegration: true,\r\n            contextIsolation: false,\r\n            // Spectron needs access to remote module\r\n            enableRemoteModule: env.name === \"test\",\r\n            backgroundThrottling: false,\r\n        }\r\n    });\r\n\r\n    mainWindow.loadURL(\r\n        url.format({\r\n            pathname: path.join(__dirname, \"app.html\"),\r\n            protocol: \"file:\",\r\n            slashes: true\r\n        })\r\n    );\r\n\r\n    if (env.name === \"development\") {\r\n        mainWindow.openDevTools();\r\n    }\r\n};\r\n\r\nexport const refresh = () => {\r\n    mainWindow.webContents.send('re-render');\r\n};","import { app } from \"electron\";\r\n\r\nexport default {\r\n  label: \"App\",\r\n  submenu: [\r\n    {\r\n      label: \"Quit\",\r\n      accelerator: \"CmdOrCtrl+Q\",\r\n      click: () => {\r\n        app.quit();\r\n      }\r\n    }\r\n  ]\r\n};\r\n","import { BrowserWindow } from \"electron\";\r\n\r\nexport default {\r\n  label: \"Development\",\r\n  submenu: [\r\n    {\r\n      label: \"Reload\",\r\n      accelerator: \"CmdOrCtrl+R\",\r\n      click: () => {\r\n        BrowserWindow.getFocusedWindow().webContents.reloadIgnoringCache();\r\n      }\r\n    },\r\n    {\r\n      label: \"Toggle DevTools\",\r\n      accelerator: \"Alt+CmdOrCtrl+I\",\r\n      click: () => {\r\n        BrowserWindow.getFocusedWindow().toggleDevTools();\r\n      }\r\n    }\r\n  ]\r\n};\r\n","module.exports = require(\"electron\");","module.exports = require(\"fs-jetpack\");","module.exports = require(\"fs\");","module.exports = require(\"path\");","module.exports = require(\"url\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// This is main process of Electron, started as first thing when your\r\n// app starts. It runs through entire life of your application.\r\n// It doesn't have any windows which you can see on screen, but we can open\r\n// window from here.\r\n\r\nimport path from \"path\";\r\nimport {app, Menu, ipcMain} from \"electron\";\r\nimport appMenuTemplate from \"./menu/app_menu_template\";\r\nimport devMenuTemplate from \"./menu/dev_menu_template\";\r\nimport fs from \"fs\";\r\nimport {init} from './main-window';\r\n\r\n// Special module holding environment variables which you declared\r\n// in config/env_xxx.json file.\r\nimport env from \"env\";\r\n\r\nconst PATH_TO_OBS_SCENES = path.join(process.env.APPDATA, '../Roaming/obs-studio/basic/scenes/');\r\n\r\n// Save userData in separate folders for each environment.\r\n// Thanks to this you can use production and development versions of the app\r\n// on same machine like those are two separate apps.\r\nif (env.name !== \"production\") {\r\n    const userDataPath = app.getPath(\"userData\");\r\n    app.setPath(\"userData\", `${userDataPath} (${env.name})`);\r\n}\r\n\r\nconst setApplicationMenu = () => {\r\n    const menus = [appMenuTemplate];\r\n    if (env.name !== \"production\") {\r\n        menus.push(devMenuTemplate);\r\n    }\r\n    Menu.setApplicationMenu(Menu.buildFromTemplate(menus));\r\n};\r\n\r\n// We can communicate with our window (the renderer process) via messages.\r\nconst initIpc = () => {\r\n    ipcMain.on(\"need-obs-data\", (event, arg) => {\r\n        const sceneCollections = fs.readdirSync(PATH_TO_OBS_SCENES)\r\n            .filter(f => !f.includes('.bak'));\r\n        const sceneCollectionData = sceneCollections.reduce((sum, sceneCollectionFileName) => {\r\n            const contents = JSON.parse(`${fs.readFileSync(path.join(PATH_TO_OBS_SCENES, sceneCollectionFileName))}`);\r\n            return [\r\n                ...sum,\r\n                {\r\n                    name: sceneCollectionFileName.replace('.json', ''),\r\n                    contents: contents,\r\n                }\r\n            ]\r\n        }, []);\r\n        event.reply(\"obs-data\", {\r\n            sceneCollectionData,\r\n        });\r\n    });\r\n};\r\n\r\n\r\napp.on(\"ready\", () => {\r\n    setApplicationMenu();\r\n    initIpc();\r\n    init();\r\n});\r\n\r\napp.on(\"window-all-closed\", () => {\r\n    app.quit();\r\n});\r\n"],"names":["app","BrowserWindow","screen","jetpack","name","options","userDataDir","cwd","getPath","stateStoreFile","defaultSize","width","height","state","win","restore","restoredState","read","err","Object","assign","getCurrentPosition","position","getPosition","size","getSize","x","y","windowWithinBounds","windowState","bounds","resetToDefaults","getPrimaryDisplay","ensureVisibleOnSomeDisplay","visible","getAllDisplays","some","display","saveState","isMinimized","isMaximized","write","atomic","on","createWindow","url","path","env","mainWindow","init","webPreferences","nodeIntegration","contextIsolation","enableRemoteModule","backgroundThrottling","loadURL","format","pathname","join","__dirname","protocol","slashes","openDevTools","refresh","webContents","send","label","submenu","accelerator","click","quit","getFocusedWindow","reloadIgnoringCache","toggleDevTools","Menu","ipcMain","appMenuTemplate","devMenuTemplate","fs","PATH_TO_OBS_SCENES","process","APPDATA","userDataPath","setPath","setApplicationMenu","menus","push","buildFromTemplate","initIpc","event","arg","sceneCollections","readdirSync","filter","f","includes","sceneCollectionData","reduce","sum","sceneCollectionFileName","contents","JSON","parse","readFileSync","replace","reply"],"sourceRoot":""}